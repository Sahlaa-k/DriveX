// import 'package:drivex/core/constants/localVariables.dart';
// import 'package:drivex/feature/auth/screens/login.dart';

// import 'package:drivex/feature/bottomNavigationBar/bottomNavigation.dart';

// import 'package:drivex/firebase_options.dart';
// import 'package:firebase_core/firebase_core.dart';
// import 'package:flutter/cupertino.dart';
// import 'package:flutter/material.dart';
// import 'package:flutter_riverpod/flutter_riverpod.dart';
// import 'package:google_fonts/google_fonts.dart';

// Future<void> main() async {
//   WidgetsFlutterBinding.ensureInitialized();
//   await Firebase.initializeApp(options: DefaultFirebaseOptions.currentPlatform);
//   runApp(const ProviderScope(child: DriveXApp()));
// }

// class DriveXApp extends StatelessWidget {
//   const DriveXApp({super.key});
//   @override
//   Widget build(BuildContext context) {
//     height = MediaQuery.of(context).size.height;
//     width = MediaQuery.of(context).size.width;
//     return GestureDetector(
//       onTap: () {
//         FocusManager.instance.primaryFocus!.unfocus();
//       },
//       child: MaterialApp(
//         debugShowCheckedModeBanner: false,
//         home: LoginPage(),
//         // home:  BottomNavDemo(),

//         theme: ThemeData(
//           textTheme: GoogleFonts.kulimParkTextTheme(),
//         ),
//       ),
//     );
//   }
// }

// lib/main.dart
// import 'package:drivex/core/constants/localVariables.dart';
// import 'package:drivex/feature/auth/screens/login.dart'; // LoginPage
// import 'package:drivex/feature/bottomNavigationBar/bottomNavigation.dart'; // BottomNavDemo

// import 'package:drivex/firebase_options.dart';
// import 'package:firebase_core/firebase_core.dart';
// import 'package:firebase_auth/firebase_auth.dart';
// import 'package:flutter/material.dart';
// import 'package:flutter_riverpod/flutter_riverpod.dart';
// import 'package:google_fonts/google_fonts.dart';

// Future<void> main() async {
//   WidgetsFlutterBinding.ensureInitialized();
//   await Firebase.initializeApp(options: DefaultFirebaseOptions.currentPlatform);
//   runApp(const ProviderScope(child: DriveXApp()));
// }

// class DriveXApp extends StatelessWidget {
//   const DriveXApp({super.key});

//   @override
//   Widget build(BuildContext context) {
//     height = MediaQuery.of(context).size.height;
//     width = MediaQuery.of(context).size.width;
//     return GestureDetector(
//       onTap: () {
//         FocusManager.instance.primaryFocus!.unfocus();
//       },
//     );
//   }
// }

/// Listens to Firebase Auth and routes:
///  - Logged in  -> BottomNavDemo()
///  - Logged out -> LoginPage()
// class AuthGate extends StatelessWidget {
//   const AuthGate({super.key});
//
//         theme:  ThemeData(
//           textTheme: GoogleFonts.kulimParkTextTheme(),
//         ),
//       ),
//     );
//   }
// }

// ------------------

import 'package:drivex/core/constants/localVariables.dart';
import 'package:drivex/feature/auth/screens/login.dart';
import 'package:drivex/feature/bottomNavigation/pages/nonusing/AuthGate.dart';
import 'package:drivex/feature/bottomNavigation/pages/nonusing/SimpleMapPage.dart';
import 'package:drivex/feature/bottomNavigationBar/bottomNavigation.dart';

import 'package:firebase_core/firebase_core.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';

import 'firebase_options.dart'; // Generated by FlutterFire CLI

// Optional global access helper (for cleaner DB calls anywhere)
class AppFire {
  static late final FirebaseFirestore mainDb; // drivex-2a34e
  static late final FirebaseFirestore gServiceDb; // g-service-d45fd
}

// ─────────────────────────────────────────────────────────────────────────────
// Entry
// ─────────────────────────────────────────────────────────────────────────────
Future<void> main() async {
  WidgetsFlutterBinding.ensureInitialized();

  // 1️⃣ Default app -> MAIN project (drivex-2a34e)
  final FirebaseApp defaultApp = await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );

  // 2️⃣ Secondary app -> G-SERVICE project (g-service-d45fd)
  final FirebaseApp gServiceApp = await _ensureSecondaryApp();

  // Assign both to global helper (optional)
  AppFire.mainDb = FirebaseFirestore.instanceFor(app: defaultApp);
  AppFire.gServiceDb = FirebaseFirestore.instanceFor(app: gServiceApp);

  runApp(
    MyApp(
      mainDb: AppFire.mainDb,
      gServiceDb: AppFire.gServiceDb,
    ),
  );
}

// Create or reuse the named secondary app ("gservice")
Future<FirebaseApp> _ensureSecondaryApp() async {
  try {
    return Firebase.app('gservice');
  } catch (_) {
    return Firebase.initializeApp(
      name: 'gservice',
      options: const FirebaseOptions(
        apiKey: 'AIzaSyBn8rqTzw0fku-HIgCZnnkFQheufH9ZXDw',
        appId: '1:751330654693:android:1274bf02580059d7f7170c',
        messagingSenderId: '751330654693',
        projectId: 'g-service-d45fd',
        storageBucket: 'g-service-d45fd.firebasestorage.app',
      ),
    );
  }
}

// ─────────────────────────────────────────────────────────────────────────────
// App
// ─────────────────────────────────────────────────────────────────────────────
class MyApp extends StatelessWidget {
  const MyApp({super.key, required this.mainDb, required this.gServiceDb});

  /// Default Firestore (drivex)
  final FirebaseFirestore mainDb;

  /// Secondary Firestore (g-service)
  final FirebaseFirestore gServiceDb;

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'DriveX',
      debugShowCheckedModeBanner: false,

      // ✅ Set global width/height once MaterialApp creates MediaQuery
      builder: (context, child) {
        final size = MediaQuery.sizeOf(context);
        height = size.height;
        width = size.width;
        return GestureDetector(
          onTap: () => FocusScope.of(context).unfocus(),
          behavior: HitTestBehavior.translucent,
          child: child,
        );
      },

      // Default start route
      home: const LoginPage(),

      // For testing both databases together, uncomment this:
      // home: Simplemappage(mainDb: mainDb, gServiceDb: gServiceDb),
    );
  }
}
